version: "2.1"

volumes:
  keys:
  cargo-registry:
  cargo-git:
  cargo-target:

services:
  test-devmode-engine-liveness:
    build:
      context: ../
      dockerfile: tests/integration-tests.dockerfile
      args:
        - http_proxy
        - https_proxy
        - no_proxy
    image: integration-tests:$ISOLATION_ID
    volumes:
      - $SAWTOOTH_DEVMODE:/project/sawtooth-devmode
    command: nose2-3
        -c /project/sawtooth-devmode/tests/nose2.cfg
        -vvvv
        -s /project/sawtooth-devmode/tests
        test_devmode_engine_liveness
    expose:
      - 8008
    stop_signal: SIGKILL

  intkey-workload:
    build:
      context: ../
      dockerfile: tests/integration-tests.dockerfile
      args:
        - http_proxy
        - https_proxy
        - no_proxy
    image: integration-tests:$ISOLATION_ID
    volumes:
      - $SAWTOOTH_DEVMODE:/project/sawtooth-devmode
    expose:
      - 8008
    command: "bash -c \"\
      while true; do curl -s http://rest-api-0:8008/state | grep -q head; if [ $$? -eq 0 ]; then break; fi; sleep 0.5; done; \
      intkey workload --rate 1 --display-frequency 15 \
      --urls {% for i in range(0,n-1) %}http://rest-api-{{ i }}:8008,{% endfor %}http://rest-api-{{ n-1 }}:8008 \
      \""
    stop_signal: SIGKILL

{% for i in range(0,n) %}
  devmode-engine-{{ i }}:
    build:
      context: ../
      dockerfile: ./Dockerfile
      args:
        - http_proxy
        - https_proxy
        - no_proxy
    image: sawtooth-devmode$INSTALL_TYPE:$ISOLATION_ID
    volumes:
      - $SAWTOOTH_DEVMODE:/project/sawtooth-devmode
      - cargo-registry:/root/.cargo/registry
      - cargo-git:/root/.cargo/git
    command: devmode-engine-rust --connect tcp://validator-{{ i }}:5005 -vv
    stop_signal: SIGKILL
{% endfor %}

  validator-0:
    image: hyperledger/sawtooth-validator:droptarget-nightly
    volumes:
      - keys:/shared_keys
    expose:
      - 4004
      - 8800
      - 5005
    working_dir: /root
    environment:
      RUST_BACKTRACE: full
    command: "bash -c \"\
        {% for i in range(1, n-1) %}sawadm keygen validator-{{ i }} && \
        {% endfor %}sawadm keygen validator-{{ n-1 }} && \
        sawadm keygen && \
        sawset genesis \
          -k /etc/sawtooth/keys/validator.priv \
          -o config-genesis.batch && \
        sawset proposal create \
          -k /etc/sawtooth/keys/validator.priv \
          sawtooth.consensus.algorithm.name=Snowball \
          sawtooth.consensus.algorithm.version=0.1 \
          sawtooth.consensus.algorithm.members=\\['\\\"'$$(cat /etc/sawtooth/keys/validator.pub)'\\\"',{% for i in range (1,n-1) %}'\\\"'$$(cat /etc/sawtooth/keys/validator-{{ i }}.pub)'\\\"',{% endfor %}'\\\"'$$(cat /etc/sawtooth/keys/validator-{{ n-1 }}.pub)'\\\"'\\] \
          sawtooth.consensus.algorithm.alfa=3 \
          sawtooth.consensus.algorithm.beta=2 \
          sawtooth.consensus.algorithm.k=4 \
          sawtooth.consensus.algorithm.block_publishing_delay=10000 \
          sawtooth.consensus.algorithm.hang_timeout=11000 \
          sawtooth.byzantine.enabled=false \
          sawtooth.byzantine.parameter.churn_idx=\\[\\] \
          sawtooth.byzantine.parameter.max_churn_timeout=20000 \
          sawtooth.byzantine.parameter.hang_idx=\\[\\] \
          sawtooth.byzantine.parameter.max_sleep_delay=400 \
          sawtooth.byzantine.parameter.sleep_idx=\\[\\] \
          sawtooth.byzantine.parameter.duplicate_idx=\\[\\] \
          sawtooth.byzantine.parameter.spurious_idx=\\[\\] \
          sawtooth.byzantine.parameter.wrong_decision_idx=\\[\\] \
          -o config.batch && \
        sawadm genesis \
          config-genesis.batch config.batch && \
        mv /etc/sawtooth/keys/validator-* /shared_keys && \
        echo $$(cat /etc/sawtooth/keys/validator.pub); \
        sawtooth-validator -v \
            --endpoint tcp://validator-0:8800 \
            --bind component:tcp://eth0:4004 \
            --bind network:tcp://eth0:8800 \
            --bind consensus:tcp://eth0:5005 \
            --peering static \
            --scheduler parallel \
            --fork-cache-keep-time 0 \
            --maximum-peer-connectivity {{ n }} \
    \""
    stop_signal: SIGKILL

{% for i in range(1, n) %}
  validator-{{ i }}:
    image: hyperledger/sawtooth-validator:droptarget-nightly
    volumes:
      - keys:/shared_keys
    expose:
      - 4004
      - 8800
      - 5005
    environment:
      RUST_BACKTRACE: full
    command: "bash -c \"\
        while true; do if [ -e /shared_keys/validator-{{ i }}.pub ]; then mv /shared_keys/validator-{{ i }}.priv /etc/sawtooth/keys/validator.priv && mv /shared_keys/validator-{{ i }}.pub /etc/sawtooth/keys/validator.pub; break; fi; sleep 0.5; done; \
        echo $$(cat /etc/sawtooth/keys/validator.pub); \
        sawtooth-validator -v \
            --endpoint tcp://validator-{{ i }}:8800 \
            --bind component:tcp://eth0:4004 \
            --bind network:tcp://eth0:8800 \
            --bind consensus:tcp://eth0:5005 \
            --peering static \
            --peers {% for j in range(0, i-1) %}tcp://validator-{{ j }}:8800,{% endfor %}tcp://validator-{{ i-1 }}:8800 \
            --scheduler parallel \
            --fork-cache-keep-time 0 \
            --maximum-peer-connectivity {{ n }} \
    \""
    stop_signal: SIGKILL
{% endfor %}

{% for i in range(0, n) %}
  rest-api-{{ i }}:
    image: hyperledger/sawtooth-rest-api:nightly
    expose:
      - 4004
      - 8008
    command: sawtooth-rest-api --connect tcp://validator-{{ i }}:4004 --bind rest-api-{{ i }}:8008
    stop_signal: SIGKILL
{% endfor %}

{% for i in range(0, n) %}
  intkey-tp-{{ i }}:
    image: hyperledger/sawtooth-intkey-tp-python:nightly
    expose:
      - 4004
    command: intkey-tp-python -C tcp://validator-{{ i }}:4004
    stop_signal: SIGKILL
{% endfor %}

{% for i in range(0, n) %}
  settings-tp-{{ i }}:
    image: hyperledger/sawtooth-settings-tp:nightly
    expose:
      - 4004
    command: settings-tp -C tcp://validator-{{ i }}:4004
    stop_signal: SIGKILL
{% endfor %}
